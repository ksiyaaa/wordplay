एक मजकूर साहस करा

एक मजेदार खेळ म्हणजे/तुमचे स्वतःचे साहस निवडा/खेळ, जिथे खेळाडू निवडींच्या मालिकेतून मार्ग काढतो आणि आनंदी शेवटाचा मार्ग शोधण्याचा प्रयत्न करतो.

यापैकी एक बनवण्यासाठी, आपण वापरू शकतो @Structure , @Key , @Reaction , आणि @List एकत्र येऊन निर्णयांचा संग्रह करा, प्रत्येकी पर्यायांचा संच असेल, जसे की:

\¶हे एक डेटा स्ट्रक्चर बनवते जे निवड आणि ते कोणत्या निर्णयावर नेव्हिगेट करेल हे संग्रहित करते.¶•Option(text•'' decision•#)
¶ही डेटा स्ट्रक्चर निवडींची यादी साठवते¶•Decision(options: [Option])
¶हा गेमचा आशय आहे! वातावरण आणि कठीण निवडी तयार करण्यासाठी पर्यायांमधील मजकूर बदला.अवघड निवडींचे जाळे तयार करण्यासाठी पर्याय जोडा.¶
decisions: [
		Decision([Option('सुरुवात' 2)])
		Decision([
				Option('डावीकडे' 3)
				Option('सरळ' 4)
				Option('बरोबर' 4)
			])
		Decision([Option('जिंकणे' 1)])
		Decision([Option('हरणे' 1)])
	]
¶जर की एक असेल तर ती संख्यामध्ये रूपांतरित करा.¶
key: Key()
choice: key → #
¶हे मूल्य वरील यादीतील सध्याच्या निर्णयाचे प्रतिनिधित्व करते.जेव्हा की दाबली जाते, तेव्हा आपण खालीलपैकी एक करतो.जर या निर्णयासाठी एकच पर्याय असेल, तर आपण सध्याचा निर्णय बदलू.कोणतीही कळ दाबली असली तरी पर्यायाच्या लक्ष्य निर्णयापर्यंत.जर दाबलेली की १ आणि पर्यायांच्या संख्येच्या दरम्यान असेल, तर आपण त्या पर्यायाच्या लक्ष्य निर्णयाकडे जाऊ.अन्यथा, आम्ही सध्याचा निर्णय तसाच ठेवतो.¶
current•#: 1 … ∆ key … decisions[current].options.length() = 1 ? decisions[current].options[1].decision ((choice ≥ 1) & (choice ≤ decisions[current].options.length())) ? decisions[current].options[choice].decision current
¶हे फक्त वाक्यांशांच्या ढिगाऱ्याच्या रूपात पर्याय दाखवते. तुम्ही सूचना, अॅनिमेशन आणि इतर मसालेदारपणा जोडण्यासाठी हे बदलू शकता!¶Stage([
		Group(Stack() decisions[current].options.translate(ƒ(option) Phrase(option.text)))
	])\

हा पॅटर्न गुंतागुंतीचा दिसतो, पण तो प्रत्यक्षात फक्त सध्याच्या पर्यायांचा संच दाखवतो आणि प्रत्येक वेळी की बदलते तेव्हा निवडलेल्या पर्यायाच्या निर्णयावर जातो. गेम डिझाइन करणे म्हणजे वरच्या मजकुरात बदल करणे!

offer-choices