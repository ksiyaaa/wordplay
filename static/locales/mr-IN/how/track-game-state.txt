खेळाच्या स्थितीचा मागोवा ठेवा

बहुतेक गेम खेळाच्या प्रगतीनुसार अनेक गोष्टींचा मागोवा घेतात: गुण, खेळाडूंचे स्थान आणि इतर तपशील हे सर्व महत्त्वाचे असतात.प्रत्येक वेळी काही इनपुट असताना, ती स्थिती बदलते आणि नंतर आपल्याला प्रतिसाद म्हणून नवीन आउटपुट प्रदर्शित करायचे असते.

कोणत्याही खेळासाठी एक सामान्य नमुना तीन गोष्टी करतो:

• सर्व गेम स्टेट साठवण्यासाठी गेम स्टेट डेटा स्ट्रक्चर परिभाषित करा.• जेव्हा नवीन इनपुट असेल तेव्हा मागील गेम स्टेटवर आधारित नवीन गेम स्टेट बनवणारी प्रतिक्रिया परिभाषित करा.• एक बनवा @Stage सह @Group आणि @Phrase खेळाची स्थिती दाखवण्यासाठी

उदाहरणार्थ, एका साध्या खेळाची कल्पना करूया ज्यामध्ये मजकूर बॉक्समध्ये गुप्त शब्द टाइप करणे आणि प्रत्येक वेळी गुप्त शब्दाचा अंदाज लावल्यावर एक गुण मिळवणे समाविष्ट आहे:

\•Game(secrets•[''] points•#)
state: Game(['मांजर' 'कुत्रा'] 0) … state.secrets.has(Chat()) … state.points:state.points + 1
Stage(state.points = state.secrets.length() ? [Phrase("तू जिंकलास!")] [
			Group(Stack() [
					Phrase("माझ्या गुप्त शब्दांचा अंदाज लावा.")
					Phrase(`\state.secrets.length() - state.points\अधिक गुपिते`)
				])
		])\

चला हे समजून घेऊया.

• पहिली ओळ,\•Game(secrets•[''] points•#)\म्हणतो,/नावाची डेटा स्ट्रक्चर बनवा\Game\जे गुपिते आणि मुद्द्यांची यादी साठवते/• दुसरी ओळ म्हणते/गेम स्टेटची सुरुवात गुपिते आणि शून्य गुणांच्या यादीने होते. प्रत्येक वेळी\Chat\बदल, जर प्रविष्ट केलेला शब्द गुपितांच्या यादीत असेल, तर गुण एकाने वाढवून एक नवीन गेम स्टेट बनवा./.• प्रत्येक वेळी कार्यक्रम पुनर्मूल्यांकन करतो (जेव्हा\Chat\बदल), एक टप्पा दाखवा. जर गुणांची संख्या गुपितांच्या संख्येइतकी असेल, तर जिंकण्याचा टप्पा दाखवा. जर नसेल, तर प्रॉम्प्ट आणि उर्वरित गुपितांची संख्या दाखवा.

या उदाहरणात काही समस्या आहेत:

• जर त्यांनी एका गुप्त शब्दाचा अनेक वेळा अंदाज लावला तर त्यांना अधिक गुण मिळतात! आपल्या गेम स्टेटला अंदाज लावलेल्या गोष्टी लक्षात ठेवाव्या लागतील, म्हणून प्रत्येक शब्द फक्त दोनदा मोजला जातो.• जर खेळाडूने अनेक शब्द प्रविष्ट केले तर ते मोजले पाहिजे का?

अधिक अत्याधुनिक गेम स्टेट्स आणि गेम अपडेट्स आम्हाला या केसेस हाताळण्यास मदत करतील.

track-points